angular.module("nodechat",["ngRoute","luegg.directives"]).config(["$routeProvider","$locationProvider",function(e,t){t.html5Mode(!0),e.when("/home",{templateUrl:"home.tpl.html",controller:"homeCtrl",controllerAs:"ctrl",css:"/views/css/home.css"}).when("/",{templateUrl:"login.tpl.html",controller:"loginCtrl",controllerAs:"ctrl",css:"/views/css/login.css"}).when("/chat/:username",{templateUrl:"chat.tpl.html",controller:"chatCtrl",controllerAs:"ctrl",css:"/views/css/chat.css"}).when("/inbox",{templateUrl:"inbox.tpl.html",controller:"inboxCtrl",controllerAs:"ctrl",css:"/views/css/inbox.css"}).when("/recent",{templateUrl:"recent.tpl.html",controller:"recentCtrl",controllerAs:"ctrl",css:"/views/css/recent.css"}).when("/search",{templateUrl:"search.tpl.html",controller:"searchCtrl",controllerAs:"ctrl",css:"/views/css/search.css"})}]),angular.module("nodechat").controller("chatCtrl",function(e,t,r,n,s,a){var o=this;o.currentUser=a.getCurrentUser(),o.chattingTo=e.username,o.newMessage="",o.messageLog=s.getLogForUser(o.chattingTo),o.messageLog&&(o.messages=o.messageLog.messages),s.markAsRead(o.chattingTo),o.sendMessageOnKeypress=function(e){13===e.which&&o.sendMessage()},o.sendMessage=function(){s.sendMessage(o.chattingTo,o.newMessage),o.messageLog||t.reload(),o.newMessage=""}}),angular.module("nodechat").controller("homeCtrl",function(e,t,r){var n=this;n.recipient="",n.message="",n.users={},n.currentUser=r.getCurrentUser(),t.getAllUsers().then(function(e){var t=e.data.users;delete t[n.currentUser.username],n.users=t}),n.startChat=function(t){e.path("/chat/"+t.username)},n.userCount=function(){return Object.keys(n.users).length}}),angular.module("nodechat").controller("inboxCtrl",function(e,t){var r=this,n=t.getUnreadMessages();r.unreadMessages=function(){var e={};return angular.forEach(n,function(t,r){e[t.sender]?e[t.sender].push(t):e[t.sender]=[t]}),e}(),r.startChat=function(t){e.path("/chat/"+t)},r.hasUnreadMessages=function(){return 0!==Object.keys(r.unreadMessages).length}}),angular.module("nodechat").controller("loginCtrl",function(e,t,r,n){var s=this;s.user={username:"",gender:"Male",country:"GBR"},s.login=function(){r.addUser(s.user).then(function(t){200===t.status&&t.data.key&&(localStorage.setItem("userKey",t.data.key),n.setKey(t.data.key),n.setCurrentUser(s.user),e.path("/home"))})}}),angular.module("nodechat").controller("navCtrl",function(e,t,r,n,s,a){var o=this;o.unreadMessages=0,o.currentUser=a.getCurrentUser(),o.isHome=function(){return"/home"===e.path()},o.isInbox=function(){return"/inbox"===e.path()},o.isRecent=function(){return"/recent"===e.path()},o.isSearch=function(){return"/search"===e.path()},o.navigateHome=function(){o.isHome()?t.reload():e.path("/home")},o.navigateInbox=function(){o.isInbox()?t.reload():e.path("/inbox")},o.navigateRecent=function(){o.isRecent()?t.reload():e.path("/recent")},o.navigateSearch=function(){o.isSearch()?t.reload():e.path("search")};var c=function(){var e=s.getUnreadMessages();o.unreadMessages=e.length};r.$on("messageLogStateChanged",function(){n.$apply(function(){c()})})}),angular.module("nodechat").controller("recentCtrl",function(e,t){var r=this;r.logs=t.getAllLogs(),r.startChat=function(t){e.path("/chat/"+t)},r.hasActiveChats=function(){return 0!==Object.keys(r.logs).length}}),angular.module("nodechat").controller("searchCtrl",function(e,t,r){var n=this;n.users={},n.filteredUsers={},n.searchTerm="",n.isSearchResults=function(){return 0!==Object.keys(n.filteredUsers).length};var s=r.getCurrentUser();t.getAllUsers().then(function(e){var t=e.data.users;delete t[s.username],n.users=t}),n.filterUsers=function(){n.filteredUsers={},angular.forEach(n.users,function(e,t){-1!==t.toLowerCase().indexOf(n.searchTerm.toLowerCase())&&(n.filteredUsers[t]=e)}),""===n.searchTerm&&(n.filteredUsers={})},n.startChat=function(t){e.path("/chat/"+t)}}),angular.module("nodechat").service("apiService",function(e){var t=this;BASE_URL="http://192.168.1.246:3000/api",t.addUser=function(t){return e({method:"POST",url:BASE_URL+"/users/add",data:JSON.stringify(t),headers:{"Content-Type":"application/json"}})},t.getAllUsers=function(){return e({method:"GET",url:BASE_URL+"/users/getAll"})}}),angular.module("nodechat").service("chatService",function(e,t,r,n){var s=this,a=r.getKey();chatLogs={},s.getAllUsers=function(){return n.getAllUsers()};var o=r.getCurrentUser(),c=io.connect("",{query:"username="+o.username+"&key="+a});s.sendMessage=function(e,t){c.emit("newChatMessage",{key:a,from:o.username,recipient:e,message:t}),u(o.username,e,t)},s.getLogForUser=function(e){if(l(e))return chatLogs[e]},s.getAllLogs=function(){return chatLogs},c.on("newChatMessage",function(e){u(e.from,o.username,e.message),t.$broadcast("messageLogStateChanged")}),c.on("userDisconnected",function(e){var t=e.username;chatLogs[t]&&delete chatLogs[t]}),s.markAsRead=function(e){l(e)&&angular.forEach(chatLogs[e],function(e,t){angular.forEach(e,function(e,t){e.read=!0})}),t.$broadcast("messageLogStateChanged")},s.getUnreadMessages=function(){var e=[];return angular.forEach(chatLogs,function(t,r){angular.forEach(t.messages,function(t,r){t.read||e.push(t)})}),e};var u=function(t,r,n){var s="",a=!1;r===o.username?(s=t,a=!1):(s=r,a=!0),e.path()==="/chat/"+s&&(a=!0);var c={sender:t,message:n,read:a};l(s)?chatLogs[s].messages.push(c):chatLogs[s]={messages:[c]}},l=function(e){return!!chatLogs[e]}}),angular.module("nodechat").service("sessionService",function(){var e=this;_key=localStorage.getItem("userKey"),_currentUser={},e.setCurrentUser=function(e){_currentUser=e},e.getCurrentUser=function(){return _currentUser},e.setKey=function(e){_key=e},e.getKey=function(){return _key}});